{
  "name": "storefront",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "prefix": "holder",
  "sourceRoot": "apps/storefront/src",
  "tags": [],
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "outputs": ["{options.outputPath}"],
      "options": {
        "outputPath": "dist/apps/storefront",
        "index": "apps/storefront/src/index.html",
        "main": "apps/storefront/src/main.ts",
        "polyfills": ["zone.js"],
        "tsConfig": "apps/storefront/tsconfig.app.json",
        "assets": [
          "apps/storefront/src/favicon.ico",
          "apps/storefront/src/assets"
        ],
        "styles": [
          "apps/storefront/src/styles.scss",
          "apps/storefront/src/assets/css/animate.min.css",
          "apps/storefront/src/assets/css/boxicons.min.css",
          "apps/storefront/src/assets/css/fancybox.min.css",
          "apps/storefront/src/assets/css/flaticon.css",
          "apps/storefront/src/assets/css/magnific-popup.min.css",
          "apps/storefront/src/assets/css/meanmenu.min.css",
          "apps/storefront/src/assets/css/nice-select.min.css",
          "apps/storefront/src/assets/css/rangeSlider.min.css",
          "node_modules/bootstrap/scss/bootstrap.scss",
          "node_modules/owl.carousel/dist/assets/owl.carousel.min.css",
          "node_modules/owl.carousel/dist/assets/owl.theme.default.min.css",
        ],
        "scripts": [
          "apps/storefront/src/assets/js/fancybox.min.js",
          "apps/storefront/src/assets/js/isotope.pkgd.min.js",
          "apps/storefront/src/assets/js/magnific-popup.min.js",
          "apps/storefront/src/assets/js/meanmenu.min.js",
          "apps/storefront/src/assets/js/nice-select.min.js",
          "apps/storefront/src/assets/js/rangeSlider.min.js",
          "apps/storefront/src/assets/js/TweenMax.min.js",
          "apps/storefront/src/assets/js/ScrollMagic.min.js",
          "apps/storefront/src/assets/js/animation.gsap.min.js",
          "apps/storefront/src/assets/js/debug.addIndicators.min.js",
          "apps/storefront/src/assets/js/sticky-sidebar.min.js",
          "apps/storefront/src/assets/js/wow.min.js",
          "apps/storefront/src/assets/js/main.js",
          "node_modules/jquery/dist/jquery.min.js",
          "node_modules/popper.js/dist/umd/popper.min.js",
          "node_modules/bootstrap/dist/js/bootstrap.min.js",
          "node_modules/owl.carousel/dist/owl.carousel.min.js"
        ]
      },
      "configurations": {
        "production": {
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "500kb",
              "maximumError": "1mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "2kb",
              "maximumError": "4kb"
            }
          ],
          "outputHashing": "all"
        },
        "development": {
          "buildOptimizer": false,
          "optimization": false,
          "vendorChunk": true,
          "extractLicenses": false,
          "sourceMap": true,
          "namedChunks": true
        }
      },
      "defaultConfiguration": "production"
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "configurations": {
        "production": {
          "browserTarget": "storefront:build:production"
        },
        "development": {
          "browserTarget": "storefront:build:development"
        }
      },
      "defaultConfiguration": "development"
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "browserTarget": "storefront:build"
      }
    },
    "lint": {
      "executor": "@nx/linter:eslint",
      "outputs": ["{options.outputFile}"],
      "options": {
        "lintFilePatterns": [
          "apps/storefront/**/*.ts",
          "apps/storefront/**/*.html"
        ]
      }
    },
    "test": {
      "executor": "@nx/jest:jest",
      "outputs": ["{workspaceRoot}/coverage/{projectRoot}"],
      "options": {
        "jestConfig": "apps/storefront/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "serve-static": {
      "executor": "@nx/web:file-server",
      "options": {
        "buildTarget": "storefront:build"
      }
    }
  }
}
